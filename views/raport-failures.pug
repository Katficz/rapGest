extends layout 

block content
    div.container
        div.row
            div.col-xl-10.offset-xl-1.col-l-12
                h3.h3.text-center Lista awarii
                button.btn.btn-outline-warning#newFailure(type="button" onclick='addFBtn()') Dodaj Awarię

                div.accordion#failureAccordion.mt-2(data-raport=myRaport data-coworkers=coWorkers data-loggedInUser=loggedInUser.fullname)

                    if myRaport.failure.length!=0

                        each failure, index in myRaport.failure

                            div.card#card(value=failure._id)

                                div.card-header.gestamp-bg-color
                                    h2.mb-0 
                                        button.btn.btn-link.btn-block.text-left.collapsed(type="button" data-toggle="collapse" data-target='#collapse'+index aria-expanded="true" aria-controls="collapseOne" style="color: white") Awaria num #{index + 1} Dodana przez: #{failure.author.fullname}

                                div.collapse(data-parent="#failureAccordion" id='collapse'+index)

                                    div.card-body(id=('ID'+failure._id))

                                        form(data-rapId=myRaport._id data-failureId=failure._id)

                                            div.form-row#startUpOption(data-failure=failure)
                                                div.form-group.col-4
                                                    label Linia produkcyjna
                                                    select.prodLineOption.form-control(name="prodLine")
                                                        option(value='defaultvalue' selected) -
                                                        each prodLineIterate in prodLines 
                                                            if failure.prodLine
                                                                option(value=prodLineIterate._id selected=(failure.prodLine.name==prodLineIterate.name)) #{prodLineIterate.name}   
                                                            else
                                                                option(value=prodLineIterate._id) #{prodLineIterate.name}

                                                div.form-group.col-4
                                                    label Operacja
                                                    select.operationOption.form-control
                                                        option(value='defaultvalue' selected) -
                                                        each operation in operations
                                                            if failure.operation
                                                                option(value=operation._id selected=(failure.operation.name==operation.name)) #{operation.name}  
                                                                option #{failure.operation}  
                                                            else
                                                                option(value=operation._id) #{operation.name}

                                                div.form-group.col-4
                                                    label Typ urządzenia
                                                    select.deviceTypeOption.form-control
                                                        option(value='defaultvalue' selected) -
                                                        each deviceTypeIt in deviceTypes
                                                            if failure.deviceType
                                                                option(value=deviceTypeIt._id selected=(failure.deviceType.name==deviceTypeIt.name)) #{deviceTypeIt.name}  
                                                            else
                                                                option(value=deviceTypeIt._id) #{deviceTypeIt.name}

                                                div.form-group.col-4
                                                    label Urządzenie
                                                    select.deviceOption.form-control
                                                        option(value='defaultvalue' selected) -
                                                        each deviceIt in devices
                                                            if failure.device
                                                                option(value=deviceIt._id selected=(failure.device.name==deviceIt.name)) #{deviceIt.name}
                                                            else
                                                                option(value=deviceIt._id) #{deviceIt.name}
                                            div.form-row
                                                div.form-group.col-4
                                                    label(for="startDate") Godzina rozpoczęcia
                                                    - var nSD = new Date(failure.startDate)
                                                    input.form-control#startDate(type='time', name='startDate' value=(("0" + nSD.getHours()).slice(-2)+':'+("0" + nSD.getMinutes()).slice(-2)) disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true))
                                                div.form-group.col-4
                                                    label(for="endDate") Godzina zakończenia
                                                    - var nED = new Date(failure.endDate)
                                                    input.form-control#endDate(type='time', name='endDate' value=(("0" + nED.getHours()).slice(-2)+':'+("0" + nED.getMinutes()).slice(-2)) disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true))
                                            .row.mt-2
                                                .col.d-flex.justify-content-between
                                                    .form-check.form-check-inline
                                                        input.form-check-input.statusRepaired(type='radio'  name='status' value='1' checked=(failure.status===1 ? true : false) )
                                                        label.form-check-label Naprawiono 
                                                    .form-check.form-check-inline
                                                        input.form-check-input.statusNotRepaired(type='radio' name='status' value='2' checked=(failure.status===1 ? true : false))
                                                        label.form-check-label Nie naprawiono 
                                                    .form-check.form-check-inline
                                                        input.form-check-input.statusTemporary(type='radio' name='status' value='3' checked=(failure.status===1 ? true : false))
                                                        label.form-check-label Rozwiązanie tymczasowe 

                                            div.form-row
                                                div.form-group.col-12
                                                    label Numer zlecenia
                                                    textarea.form-control.orderNum(type='text' name='orderNum' disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true)) #{failure.orderNum}

                                            div.form-row
                                                div.form-group.col-12
                                                    label Przyczyna
                                                    textarea.text-break.form-control.cause(type='text', name='cause' disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true)) #{failure.cause}

                                            div.form-row
                                                div.form-group.col-12
                                                    label Diagnostyka
                                                    textarea.form-control.diagnostics(type='text', name='diagnostics' disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true)) #{failure.diagnostics}

                                            div.form-row
                                                div.form-group.col-12
                                                    label Wykonane akcje
                                                    textarea.form-control.action(type='text', name='action' disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true)) #{failure.action}

                                            div.form-row
                                                div.form-group.col-6
                                                    label Wykorzystane części
                                                    textarea.form-control.usedParts(type='text', name='usedParts' disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true)) #{failure.usedParts}
                                                div.form-group.col-6
                                                    label Brakujące części
                                                    textarea.form-control.missingParts(type='text', name='missingParts' disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true)) #{failure.missingParts}

                                            div.form-row
                                                div.form-group.col-12
                                                    p Pracujący przy awarii:
                                                        ul.nice-shifts-border.list-unstyled
                                                            each employee in coWorkers
                                                                div(class='aa'+failure._id.toString() data-emplo=employee._id)
                                                                    li
                                                                        input.mr-1.collabsCheckBox(type='checkbox' name='nonCollabs' data-employeeId=employee._id.toString() disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true))
                                                                        label(for='nonCollabs') #{employee.name} #{employee.surname}
                                            div.form-row
                                                div.form-group.col-12
                                                    button.btn.btn-outline-danger#deleteFailure(type="button" onclick='deleteSomeFail(this)' disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true)) Usuń
                                                    button.btn.btn-outline-success.float-right#saveFailure.float-right(type="button" onclick='saveSomeFailure(this)' disabled=(failure.author._id.toString()==loggedInUser._id.toString()?false:true)) Zapisz

                    div.card#card(style="display: none")
                        div.card-header.gestamp-bg-color
                            h2.mb-0 
                                button.btn.btn-link.btn-block.text-left(type="button" data-toggle="collapse" data-target="#collapse1" aria-expanded="true" aria-controls="collapseOne" style="color: white") Awaria num 1 #{loggedInUser.fullname}
                        div#collapse1.collapse(data-parent="#failureAccordion")
                            div.card-body
                                form(data-rapId=myRaport._id)
                                    div.form-row
                                        div.form-group.col-4
                                            label Linia produkcyjna
                                            select.prodLineOption.form-control(name="prodLine")
                                                option(value='defaultvalue' selected) -
                                                each prodLineIterate in prodLines 
                                                    option(value=prodLineIterate._id) #{prodLineIterate.name}

                                        div.form-group.col-4
                                            label Operacja
                                            select.operationOption.form-control
                                                option(value='defaultvalue' selected) -
                                                each operation in operations
                                                    option(value=operation._id) #{operation.name}

                                        div.form-group.col-4
                                            label Typ urządzenia
                                            select.deviceTypeOption.form-control
                                                option(value='defaultvalue' selected) -
                                                each deviceTypeIt in deviceTypes
                                                    option(value=deviceTypeIt._id) #{deviceTypeIt.name}

                                        div.form-group.col-4
                                            label Urządzenie
                                            select.deviceOption.form-control
                                                option(value='defaultvalue' selected) -
                                                each deviceIt in devices
                                                    option(value=deviceIt._id) #{deviceIt.name}
                                    div.form-row
                                        div.form-group.col-4
                                            label(for="startDate") Godzina rozpoczęcia
                                            input.form-control#startDate(type='time', name='startDate' required)
                                        div.form-group.col-4
                                            label(for="endDate") Godzina zakończenia
                                            input.form-control#endDate(type='time', name='endDate' required)
                                    .row.mt-2
                                        .col.d-flex.justify-content-between
                                            .form-check.form-check-inline
                                                input.form-check-input.statusRepaired(type='radio'  name='status' value='1' )
                                                label.form-check-label Naprawiono 
                                            .form-check.form-check-inline
                                                input.form-check-input.statusNotRepaired(type='radio' name='status' value='2' )
                                                label.form-check-label Nie naprawiono 
                                            .form-check.form-check-inline
                                                input.form-check-input.statusTemporary(type='radio' name='status' value='3' )
                                                label.form-check-label Rozwiązanie tymczasowe 

                                    div.form-row
                                        div.form-group.col-12
                                            label Numer zlecenia
                                            input.form-control.orderNum(type='text', name='orderNum')

                                    div.form-row
                                        div.form-group.col-12
                                            label Przyczyna
                                            textarea.form-control.cause(type='text', name='cause')

                                    div.form-row
                                        div.form-group.col-12
                                            label Diagnostyka
                                            textarea.form-control.diagnostics(type='text', name='diagnostics')

                                    div.form-row
                                        div.form-group.col-12
                                            label Wykonane akcje
                                            textarea.form-control.action(type='text', name='action')

                                    div.form-row
                                        div.form-group.col-6
                                            label Wykorzystane części
                                            textarea.form-control.usedParts(type='text', name='usedParts')
                                        div.form-group.col-6
                                            label Brakujące części
                                            textarea.form-control.missingParts(type='text', name='missingParts')
                                    div.form-row
                                        div.form-group.col-12
                                            p Współpracujący przy awarii:
                                                ul.nice-shifts-border.list-unstyled
                                                    each employee in coWorkers
                                                        div(style="width:100%")
                                                            li
                                                                input.mr-1.collabsCheckBox(type='checkbox' data-employeeId=employee._id.toString() name='techCoWorker' value=employee._id)
                                                                label(for='techCoWorker') #{employee.name} #{employee.surname}          


                                    div.form-row
                                        div.form-group.col-12
                                            button.btn.btn-outline-danger#deleteFailure(type="button" name="deleteDiv" onclick="deleteSomeFail(this)") Usuń
                                            button.btn.btn-outline-success.float-right#saveFailure.float-right(type="button" onclick='saveSomeFailure(this)') Zapisz

    div#snackbar 

    script.
        const allDevices =  !{JSON.stringify(devices)}
        const allFailures = !{JSON.stringify(myRaport.failure)}

        for (failure of allFailures){
            failureID = 'ID' + failure._id

            failureForm = document.getElementById(failureID)
            failureForm.querySelector('.prodLineOption').addEventListener('change', updateDevices)
            failureForm.querySelector('.operationOption').addEventListener('change', updateDevices)
            failureForm.querySelector('.deviceTypeOption').addEventListener('change', updateDevices)
        }
        function updateDevices(){
            let parent = this.parentNode.parentNode
            let line = parent.querySelector('.prodLineOption').value
            let operation = parent.querySelector('.operationOption').value
            let devicetype = parent.querySelector('.deviceTypeOption').value
            let devices = []
            for (device of allDevices){
                if((line==='defaultvalue' ? true : device.prodLine.toString() === line) &&
                    (operation==='defaultvalue' ? true : device.operation.toString() === operation) &&
                    (devicetype==='defaultvalue' ? true : device.deviceType.toString() === devicetype)){
                    devices.push(device)
                }
            }
            removeOptions(parent.querySelector('.deviceOption'))
            renderDevices(devices, parent)
        }
        function renderDevices(devices, parent){
            let devicesHTML = `<option value='defaultvalue' selected=true> - </option>`
            for(device of devices) {
                devicesHTML = devicesHTML + '<option value='+ device._id +'>' + device.name + '</option>';
            }
            let whereToPaste = parent.querySelector('.deviceOption')
            whereToPaste.insertAdjacentHTML('beforeend', devicesHTML)
            }
        function removeOptions(selectElement) {
            var i, L = selectElement.options.length - 1;
            for(i = L; i >= 0; i--) {
                selectElement.remove(i);
            }
        }

    script.
        raport = !{JSON.stringify(myRaport)}
        const activateLink = document.querySelector('#seconSectionActive')
        activateLink.className+=" active"
        const activateSubMenu = document.querySelector('#myRaportSubMenu')
        activateSubMenu.className+=" active"

        const bigDiv = document.querySelector('#failureAccordion')

        //startupforcollaborators
        var failures = JSON.parse(bigDiv.dataset.raport).failure
        for(var i = 0;i<failures.length;i++) {
            var divyDoPokazania = document.querySelectorAll('div.aa'+failures[i]._id)
            for(var j = 0;j<divyDoPokazania.length;j++) {
                for(var k = 0;k<failures[i].collaborators.length;k++) {
                    if(divyDoPokazania[j].dataset.emplo==failures[i].collaborators[k]._id) {
                        divyDoPokazania[j].firstChild.firstChild.checked = true
                    }
                }
            }
        };

        var failureNum = bigDiv.childElementCount -1

        function addFBtn() {
            failureNum++
            var newDiv = bigDiv.lastChild.cloneNode(true)
            fullName = bigDiv.dataset.loggedinuser.toString()
            newDiv.firstChild.firstChild.lastChild.textContent = 'Awaria num '+ failureNum + ' ' + fullName
            newDiv.firstChild.firstChild.lastChild.dataset.target = '#collapse'+failureNum
            newDiv.lastChild.id = 'collapse'+failureNum
            newDiv.style.display = 'flex'
            bigDiv.appendChild(newDiv)

            newDiv.querySelector('.prodLineOption').addEventListener('change', updateDevices)
            newDiv.querySelector('.operationOption').addEventListener('change', updateDevices)
            newDiv.querySelector('.deviceTypeOption').addEventListener('change', updateDevices)
        }

        function deleteSomeFail(button) {
            var form = button.parentNode.parentNode.parentNode
            if(form.dataset.failureid) {
                var accordionDiv = button.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode
                var deleteMeDiv = button.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode
                fetch('/api/usun-awarie/'+form.dataset.rapid, {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({failureId: form.dataset.failureid})

                })
                .then(function(response) {
                console.log(response)

                return response.json();
                })
                .then(function(json) {
                    if(json.message) {
                        alert(json.message)
                    }
                    else{
                    accordionDiv.removeChild(deleteMeDiv)
                    var snackBar = document.getElementById("snackbar");
                    snackBar.className = "show";
                    snackBar.textContent = 'Pomyślnie usunięto awarię!'
                    setTimeout(function(){ snackBar.className = snackBar.className.replace("show", ""); }, 3000);                     }
                })
                .catch((err) => {
                    alert(err.message)
                })

                }
            if(!form.dataset.failureid) {
                var accordionDiv = button.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode
                var deleteMeDiv = button.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode
                accordionDiv.removeChild(deleteMeDiv)
            }
        }

        // This function takes time string(eg. "12:30") and turns it into date obj
        function timeToDate(time){
            time = time.split(':')
            let today = new Date(raport.date)
            today.setHours(time[0],time[1],0,0)
            return today
        }
        function saveSomeFailure(button) {
            var form = button.parentNode.parentNode.parentNode
            //- prodLineId = form.childNodes[0].childNodes[0].childNodes[1].selectedOptions[0].value
            //- deviceTypeId = form.childNodes[0].childNodes[1].childNodes[1].selectedOptions[0].value
            //- deviceId = form.childNodes[0].childNodes[2].childNodes[1].selectedOptions[0].value
            prodLineId = form.querySelector('.prodLineOption').value
            deviceTypeId = form.querySelector('.deviceTypeOption').value
            deviceId = form.querySelector('.deviceOption').value
            operationId = form.querySelector('.operationOption').value

            let status
            if (form.querySelector(".statusRepaired").checked){
                status = 1
                }
            else if (form.querySelector(".statusNotRepaired").checked){
                status = 2
                }
            else if (form.querySelector(".statusTemporary").checked){
                status = 3
                }

            startDate = form.childNodes[1].childNodes[0].childNodes[1].value
            startDate = timeToDate(startDate)
            endDate = form.childNodes[1].childNodes[1].childNodes[1].value
            endDate = timeToDate(endDate)
            // if endDate is lower than start date it means it ended past midnight
            if (endDate < startDate){
                endDate.setDate(endDate.getDate()+1)
            }
            if(startDate == ''){
                startDate = new Date(raport.date)
            }
            if(endDate == ''){
                endDate = startDate
            }

            //- var effect
            //- if(form.childNodes[1].childNodes[2].childNodes[1].checked) {effect = true}
            //- if(form.childNodes[1].childNodes[2].childNodes[3].checked) {effect = false}

            orderNum = form.querySelector('.orderNum').value
            cause = form.querySelector('.cause').value
            diagnostics = form.querySelector('.diagnostics').value
            action = form.querySelector('.action').value
            usedParts = form.querySelector('.usedParts').value
            missingParts = form.querySelector('.missingParts').value

            //cause = form.childNodes[3].childNodes[0].childNodes[1].value

            //diagnostics = form.childNodes[4].childNodes[0].childNodes[1].value

            //action = form.childNodes[5].childNodes[0].childNodes[1].value

            //usedParts = form.childNodes[6].childNodes[0].childNodes[1].value
            //missingParts = form.childNodes[6].childNodes[1].childNodes[1].value

            collaborators = []
            collabsCheck = form.querySelectorAll('.collabsCheckBox')
            for(let i = 0;i<collabsCheck.length;i++) {
                if(collabsCheck[i].checked) {
                    collaborators.push(collabsCheck[i].dataset.employeeid) // inputy
                }
            }

            let formBody = {
                failureId: form.dataset.failureid,
                startDate: startDate,
                endDate: endDate,
                orderNum: orderNum,
                cause: cause,
                diagnostics: diagnostics,
                status: status,
                action: action,
                usedParts: usedParts,
                missingParts: missingParts,
                collaborators: collaborators,
                shift: raport.shift
            }
            console.log(formBody)

            if (operationId !== 'defaultvalue')
                formBody.operation = operationId
            if (prodLineId !== 'defaultvalue')
                formBody.prodLine = prodLineId
            if (deviceTypeId !== 'defaultvalue')
                formBody.deviceType = deviceTypeId
            if (deviceId !== 'defaultvalue')
                formBody.device = deviceId


            fetch('/api/zapisz-awarie/'+form.dataset.rapid, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formBody)
            })
            .then(function(response) {
                return response.json();
            })
            .then(function(json) {
                if(json.message) {
                    alert(json.mesage)
                }
                else{
                    var snackBar = document.getElementById("snackbar");
                    snackBar.className = "show";
                    snackBar.textContent = 'Pomyślnie zapisano awarię!'
                    setTimeout(function(){ snackBar.className = snackBar.className.replace("show", ""); }, 3000);                 form.dataset.failureid = json._id
                }
            })
            .catch((err) => {
                alert(err.message)
            })
        }

    if errors
        ul
            for error in errors
                li!= error.msg
