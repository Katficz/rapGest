extends layout 
block content 
    div.container
        div.row
            h1.col-12.h1.text-center.m-4= title

            div.col-xl-5.col-sm-12.mt-4
                div.raportTableTitle.text-center.mt-1 Skład Osobowy
                if present||absent
                    div.form-group
                        form#team(data-raportId=data.raport._id data-raportSavedTeam=data.raport.team)
                            table.table.table-sm.mb-0
                                thead 
                                    tr
                                        th(scope="col") Imię
                                        th(scope="col") Nazwisko
                                        th.text-center(scope="col") Obecność
                                tbody 
                                    each employee in present
                                        tr
                                            td!= employee.name 
                                            td!= employee.surname
                                            td.text-center
                                                input.m-1#presentEmployee(type="checkbox" name="presence" data-userId=employee._id checked)

                                    each employee in absent
                                        tr
                                            td!= employee.name 
                                            td!= employee.surname
                                            td.text-center
                                                input.m-1#presentEmployee(type="checkbox" name="presence" data-userId=employee._id)
                            buttonbtn.align-right.btn.btn-outline-success.btn-block.mb-1(type="button" onclick='saveTeam()') Zapisz skład osobowy
                else
                    p BRAK SKŁADU OSOBOWEGO DLA TEJ ZMIANY
                div.raportTableTitle.text-center Obchód
                div.form-group
                    table.table.table-bordered.mb-0
                        thead 
                            tr
                                th(scole="col") Miejsce
                                th(scole="col") Dodatkowy opis
                                th.text-center(scole="col" style="width: 12%") OK/NOK
                        tbody
                            each place in roundAroundPlaces
                                tr
                                    td 
                                        p #{place[2]}
                                    td
                                        textarea.form-control.roundAroundText(rows="1" id=place[0]) #{data.raport.roundAround[place[0]]}
                                    td(align="center")
                                        input.m-1.roundAroundCheckBox(type="checkbox" id=place[1] name=place[1] checked=data.raport.roundAround[place[1]])
                    buttonbtn.align-right.btn.btn-outline-success.btn-block.mb-1(type="button" onclick='saveRoundAround()') Zapisz Obchód


                form#addiitonalInfo
                    div.raportTableTitle.text-center Dodatkowe informacje
                    div.form-group
                        textarea#freeText.form-control(rows="5") #{data.raport.additionalInfo}
                    buttonbtn.align-right.btn.btn-outline-success.btn-block.mb-5(type="button" onclick='saveAdditionalInfo()') Zapisz dodatkowy opis

            div.col-xl-7.col-md-12.col-sm-12
                h3.h3.text-center Lista awarii
                button.btn.btn-outline-warning#newFailure(type="button" onclick='addFBtn()') Dodaj Awarię

                div.accordion#failureAccordion.mt-2
                    
                    if data.raport.failure.length!=0
                       
                        each failure, index in data.raport.failure

                            div.card#card(value=failure._id)
                                
                                div.card-header.gestamp-bg-color
                                    h2.mb-0 
                                        button.btn.btn-link.btn-block.text-left.collapsed(type="button" data-toggle="collapse" data-target='#collapse'+index aria-expanded="true" aria-controls="collapseOne" style="color: white") Awaria num #{index + 1} Dodana przez: #{failure.author.fullname}
                                
                                div.collapse(data-parent="#failureAccordion" id='collapse'+index)
                                    
                                    div.card-body
                                        
                                        form(data-rapId=data.raport._id data-failureId=failure._id)
                                            
                                            div.form-row#startUpOption(value!=failure)
                                                
                                                div.form-group.col-4
                                                    label Linia produkcyjna
                                                    select.prodLineOption.form-control(name="prodLine")
                                                        option(value='Dowolna' selected) -
                                                        each prodLineIterate in data.prodLines 
                                                            if failure.prodLine
                                                                option(value=prodLineIterate._id selected=(failure.prodLine.name==prodLineIterate.name)) #{prodLineIterate.name}   
                                                            else
                                                                option(value=prodLineIterate._id) #{prodLineIterate.name}
                                                              
                                                div.form-group.col-4
                                                    label Operacja
                                                    select.operationOption.form-control
                                                        option(value='Dowolna' selected) -
                                                        each operation in data.operations
                                                            if failure.operation
                                                                option(value=operation._id selected=(failure.operation.name==operation.name)) #{operation.name}  
                                                            else
                                                                option(value=operation._id) #{operation.name}

                                                div.form-group.col-4
                                                    label Typ urządzenia
                                                    select.deviceTypeOption.form-control
                                                        option(value='Dowolna' selected) -
                                                        each deviceTypeIt in data.deviceTypes
                                                            if failure.deviceType
                                                                option(value=deviceTypeIt._id selected=(failure.deviceType.name==deviceTypeIt.name)) #{deviceTypeIt.name}  
                                                            else
                                                                option(value=deviceTypeIt._id) #{deviceTypeIt.name}

                                                div.form-group.col-4
                                                    label Urządzenie
                                                    select.deviceOption.form-control
                                                        option(value='Dowolna' selected) -
                                                        each deviceIt in data.devices
                                                            if failure.device
                                                                option(value=deviceIt._id selected=(failure.device.name==deviceIt.name)) #{deviceIt.name}
                                                            else
                                                                option(value=deviceIt._id) #{deviceIt.name}
                                            div.form-row
                                                div.form-group.col-4
                                                    label(for="startDate") Godzina rozpoczęcia
                                                    - var nSD = new Date(failure.startDate)
                                                    input.form-control#startDate(type='time', name='startDate' value=(("0" + nSD.getHours()).slice(-2)+':'+("0" + nSD.getMinutes()).slice(-2)))
                                                div.form-group.col-4
                                                    label(for="endDate") Godzina zakończenia
                                                    - var nED = new Date(failure.endDate)
                                                    input.form-control#endDate(type='time', name='endDate' value=(("0" + nED.getHours()).slice(-2)+':'+("0" + nED.getMinutes()).slice(-2)))
                                            .row.mt-2
                                                .col.d-flex.justify-content-between
                                                    .form-check.form-check-inline
                                                        input.form-check-input.statusRepaired(type='radio'  name='status' value='1' checked=(failure.status===1 ? true : false) )
                                                        label.form-check-label Naprawiono 
                                                    .form-check.form-check-inline
                                                        input.form-check-input.statusNotRepaired(type='radio' name='status' value='2' checked=(failure.status===1 ? true : false))
                                                        label.form-check-label Nie naprawiono 
                                                    .form-check.form-check-inline
                                                        input.form-check-input.statusTemporary(type='radio' name='status' value='3' checked=(failure.status===1 ? true : false))
                                                        label.form-check-label Rozwiązanie tymczasowe 

                                            div.form-row
                                                div.form-group.col-12
                                                    label Numer zlecenia
                                                    textarea.form-control.orderNum(type='text' name='orderNum') #{failure.orderNum}

                                            div.form-row
                                                div.form-group.col-12
                                                    label
                                                    textarea.text-break.form-control.cause(type='text', name='cause') #{failure.cause}

                                            div.form-row
                                                div.form-group.col-12
                                                    label Diagnostyka
                                                    textarea.form-control.diagnostics(type='text', name='diagnostics') #{failure.diagnostics}

                                            div.form-row
                                                div.form-group.col-12
                                                    label Wykonane akcje
                                                    textarea.form-control.action(type='text', name='action') #{failure.action}

                                            div.form-row
                                                div.form-group.col-6
                                                    label Wykorzystane części
                                                    textarea.form-control.usedParts(type='text', name='usedParts') #{failure.usedParts}
                                                div.form-group.col-6
                                                    label Brakujące części
                                                    textarea.form-control.missingParts(type='text', name='missingParts') #{failure.missingParts}

                                            div.form-row
                                                div.form-group.col-12
                                                    button.btn.btn-outline-danger#deleteFailure(type="button" onclick='deleteSomeFail(this)') Usuń
                                                    button.btn.btn-outline-success.float-right#saveFailure.float-right(type="button" onclick='saveSomeFailure(this)') Zapisz
                    div.card#card(style="display: none")
                        div.card-header.gestamp-bg-color
                            h2.mb-0 
                                button.btn.btn-link.btn-block.text-left(type="button" data-toggle="collapse" data-target="#collapse1" aria-expanded="true" aria-controls="collapseOne" style="color: white") Awaria num 1
                        div#collapse1.collapse(data-parent="#failureAccordion")
                            div.card-body
                                form(data-rapId=data.raport._id)
                                    div.form-row
                                        div.form-group.col-4
                                            label Linia produkcyjna
                                            select.prodLineOption.form-control(name="prodLine")
                                                option(value='Dowolna' selected) -
                                                each prodLineIterate in data.prodLines 
                                                        option(value=prodLineIterate._id) #{prodLineIterate.name}
                                                        
                                        div.form-group.col-4
                                            label Operacja
                                            select.operationOption.form-control
                                                option(value='Dowolna' selected) -
                                                each operation in data.operations
                                                        option(value=operation._id) #{operation.name}

                                        div.form-group.col-4
                                            label Typ urządzenia
                                            select.deviceTypeOption.form-control
                                                option(value='Dowolna' selected) -
                                                each deviceTypeIt in data.deviceTypes
                                                        option(value=deviceTypeIt._id) #{deviceTypeIt.name}

                                        div.form-group.col-4
                                            label Urządzenie
                                            select.deviceOption.form-control
                                                option(value='Dowolna' selected) -
                                                each deviceIt in data.devices
                                                    option(value=deviceIt._id) #{deviceIt.name}
                                                

                                    div.form-row
                                        div.form-group.col-4
                                            label(for="startDate") Godzina rozpoczęcia
                                            input.form-control#startDate(type='time', name='startDate' required)
                                        div.form-group.col-4
                                            label(for="endDate") Godzina zakończenia
                                            input.form-control#endDate(type='time', name='endDate' required)
                                    .row.mt-2
                                        .col.d-flex.justify-content-between
                                            .form-check.form-check-inline
                                                input.form-check-input.statusRepaired(type='radio'  name='status' value='1' checked=(failure.status===1 ? true : false) )
                                                label.form-check-label Naprawiono 
                                            .form-check.form-check-inline
                                                input.form-check-input.statusNotRepaired(type='radio' name='status' value='2' checked=(failure.status===1 ? true : false))
                                                label.form-check-label Nie naprawiono 
                                            .form-check.form-check-inline
                                                input.form-check-input.statusTemporary(type='radio' name='status' value='3' checked=(failure.status===1 ? true : false))
                                                label.form-check-label Rozwiązanie tymczasowe 


                                    div.form-row
                                        div.form-group.col-12
                                            label Numer zlecenia
                                            input.form-control.orderNum(type='text', name='orderNum')

                                    div.form-row
                                        div.form-group.col-12
                                            label Przyczyna
                                            textarea.form-control.cause(type='text', name='cause')

                                    div.form-row
                                        div.form-group.col-12
                                            label Diagnostyka
                                            textarea.form-control.diagnostics(type='text', name='diagnostics')

                                    div.form-row
                                        div.form-group.col-12
                                            label Wykonane akcje
                                            textarea.form-control.action(type='text', name='action')

                                    div.form-row
                                        div.form-group.col-6
                                            label Wykorzystane części
                                            textarea.form-control.usedParts(type='text', name='usedParts')
                                        div.form-group.col-6
                                            label Brakujące części
                                            textarea.form-control.missingParts(type='text', name='missingParts')
                                    

                                    div.form-row
                                        div.form-group.col-12
                                            button.btn.btn-outline-danger#deleteFailure(type="button" name="deleteDiv" onclick="deleteSomeFail(this)") Usuń
                                            button.btn.btn-outline-success.float-right#saveFailure.float-right(type="button" onclick='saveSomeFailure(this)') Zapisz
                                        

    div#snackbar 
                  


    script.
        let raport = !{JSON.stringify(data.raport)}
        //its kinda fucked up, but adding new one is cloning form make visible:none which is last child of #failureAccordion
        //when new failure is added filled in and saved id of this failure is stored in form div
        //raport id of this raport is stored also in form 
        //form Node is used as form variable in saveSomeFailure() and used to pass data to backend

        const bigDiv = document.querySelector('#failureAccordion')
        const teamForm = document.querySelector('#team')


        //SAVE ADDITINAL INFO
        function saveAdditionalInfo() {
            const freeText = document.querySelector('#freeText')
            fetch('/api/zapisz-dodatkowe-info/'+teamForm.dataset.raportid, {
                method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({roundAround: freeText.value})
            })
            .then(function(res, err) {
                return res.json()
            })
            .then(function(response) {
                console.log(response)
                if(response.message) {
                    alert(response.message)
                }
                else{
                    var snackBar = document.getElementById("snackbar");
                    snackBar.className = "show";
                    snackBar.textContent = 'Pomyślnie zapisano dodatkowe informacje!'
                    setTimeout(function(){ snackBar.className = snackBar.className.replace("show", ""); }, 3000);                }
            })
            .catch((err) => {
                alert(err.message)
            })
        }

        //ALL THE WORK WITH ROUNDAROUND // CREATING AND EMPTY SPACE IN FRONT OF TR ELEMENT WILL BREAK THIS


        //save fetch team
        function saveTeam() {
            var teamPresent = []
            var teamAbsent = []
            // Access users' chcekboxes in some ugly way that only smart boys can understand
            for(var i = 1; i<teamForm.childNodes[0].childNodes[1].childNodes.length;i++) {
                if(teamForm.childNodes[0].childNodes[1].childNodes[i].childNodes[2].childNodes[0].checked == true) {
                    teamPresent.push(teamForm.childNodes[0].childNodes[1].childNodes[i].childNodes[2].childNodes[0].dataset.userid)
                }
                else {
                    teamAbsent.push(teamForm.childNodes[0].childNodes[1].childNodes[i].childNodes[2].childNodes[0].dataset.userid)
                }
            }
            fetch('/api/zapisz-sklad/'+teamForm.dataset.raportid, {
                method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        teamPresent: teamPresent,
                        teamAbsent: teamAbsent,
                    })
            })
            .then(function(res) {
                return res.json()
            })
            .then(function(response) {
                if(response.message) {
                    alert(response.message)
                }
                else{
                    var snackBar = document.getElementById("snackbar");
                    snackBar.className = "show";
                    snackBar.textContent = 'Pomyślnie zapisano skład osobowy!'
                    setTimeout(function(){ snackBar.className = snackBar.className.replace("show", ""); }, 3000);                }
            })
            .catch((err) => {
                alert(err.message)
            })
        }

        function saveRoundAround() {
            const roundAroundText = document.querySelectorAll('.roundAroundText')
            const roundAroundCheckBox = document.querySelectorAll('.roundAroundCheckBox')

            var roundAroundPlaces =[
                ['kettle', 'isKettle', 'Kotłownia'],
                ['compressor', 'isCompressor', 'Kompresownia'],
                ['ice', 'isIce', 'Wieża Chłodu'],
                ['electric', 'isElectric', 'Rozdzielnia'],
                ['workshop', 'isWorkshop', 'Warsztat'],
            ]
            var sendMe = {}
            for(let i = 0;i<roundAroundPlaces.length;i++) {
                sendMe[roundAroundPlaces[i][0]] = roundAroundText[i].value
                sendMe[roundAroundPlaces[i][1]] = roundAroundCheckBox[i].checked
            }

            fetch('/api/zapisz-obchod/'+teamForm.dataset.raportid, {
                method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(sendMe)
            })
            .then(function(res) {
                return res.json()
            })
            .then(function(response) {
                if(response.message) {
                    alert(response.message)
                }
                else{
                    var snackBar = document.getElementById("snackbar");
                    snackBar.className = "show";
                    snackBar.textContent = 'Pomyślnie zapisano obchód!'
                    setTimeout(function(){ snackBar.className = snackBar.className.replace("show", ""); }, 3000);                }
            })
            .catch((err) => {
                alert(err.message)
            })

        }

        //e add new Failure button onclick
        var failureNum = bigDiv.childElementCount -1
        function addFBtn() {
            failureNum++
            var newDiv = bigDiv.lastChild.cloneNode(true)

            newDiv.firstChild.firstChild.lastChild.textContent = 'Awaria num '+failureNum
            newDiv.firstChild.firstChild.lastChild.dataset.target = '#collapse'+failureNum
            newDiv.lastChild.id = 'collapse'+failureNum
            newDiv.style.display = 'flex'
            bigDiv.appendChild(newDiv)
        }
        // add / delete failure buttons onlick
        function deleteSomeFail(button) {
            var form = button.parentNode.parentNode.parentNode
            if(form.dataset.failureid) {
                var accordionDiv = button.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode
                var deleteMeDiv = button.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode
                fetch('/api/usun-awarie/'+form.dataset.rapid, {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({failureId: form.dataset.failureid})
                    
                })
                .then(function(response) {
                    return response.json();
                })
                .then(function(json) {
                    if(json.message) {
                        alert(json.message)
                    }
                    else{
                    accordionDiv.removeChild(deleteMeDiv)
                    var snackBar = document.getElementById("snackbar");
                    snackBar.className = "show";
                    snackBar.textContent = 'Pomyślnie usunięto awarię!'
                    setTimeout(function(){ snackBar.className = snackBar.className.replace("show", ""); }, 3000);                    }
                })
                .catch((err) => {
                    alert(err.message)
                })

                }
            if(!form.dataset.failureid) {
                var accordionDiv = button.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode
                var deleteMeDiv = button.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode
                accordionDiv.removeChild(deleteMeDiv)
            }
        }

        function timeToDate(time){
            time = time.split(':')
            let today = new Date(raport.date)
            today.setHours(time[0],time[1],0,0)
            return today
        }

        function saveSomeFailure(button) {
            var form = button.parentNode.parentNode.parentNode
            zmienna =form
            //- prodLineId = form.childNodes[0].childNodes[0].childNodes[1].selectedOptions[0].value
            //- deviceTypeId = form.childNodes[0].childNodes[1].childNodes[1].selectedOptions[0].value
            //- deviceId = form.childNodes[0].childNodes[2].childNodes[1].selectedOptions[0].value
            // my lucky guess
            prodLineId = form.querySelector('.prodLineOption').value
            deviceTypeId = form.querySelector('.deviceTypeOption').value
            deviceId = form.querySelector('.deviceOption').value
            operationId = form.querySelector('.operationOption').value

            let status
            if (form.querySelector(".statusRepaired").checked){
                status = 1
                }
            else if (form.querySelector(".statusNotRepaired").checked){
                status = 2
                }
            else if (form.querySelector(".statusTemporary").checked){
                status = 3
                }
            
            startDate = form.childNodes[1].childNodes[0].childNodes[1].value
            startDate = timeToDate(startDate)
            endDate = form.childNodes[1].childNodes[1].childNodes[1].value
            endDate = timeToDate(endDate)
            if (endDate < startDate){
                endDate.setDate(endDate.getDate()+1)
            }
            
            if(startDate == ''){
                startDate = new Date(raport.date)
            }
            if(endDate == ''){
                endDate = startDate
            }
            

            //- var effect
            //- if(form.childNodes[1].childNodes[2].childNodes[1].checked) {effect = true}
            //- if(form.childNodes[1].childNodes[2].childNodes[3].checked) {effect = false}
            orderNum = form.querySelector('.orderNum').value
            cause = form.querySelector('.cause').value
            diagnostics = form.querySelector('.diagnostics').value
            action = form.querySelector('.action').value
            usedParts = form.querySelector('.usedParts').value
            missingParts = form.querySelector('.missingParts').value
            //- orderNum = form.childNodes[2].childNodes[0].childNodes[1].value

            //- cause = form.childNodes[3].childNodes[0].childNodes[1].value
  
            //- diagnostics = form.childNodes[4].childNodes[0].childNodes[1].value

            //- action = form.childNodes[5].childNodes[0].childNodes[1].value

            //- usedParts = form.childNodes[6].childNodes[0].childNodes[1].value
            //- missingParts = form.childNodes[6].childNodes[1].childNodes[1].value

            let formBody = {
                    failureId: form.dataset.failureid,
                    startDate: startDate,
                    endDate: endDate,
                    orderNum: orderNum,
                    cause: cause,
                    diagnostics: diagnostics,
                    status: status,
                    action: action,
                    usedParts: usedParts,
                    missingParts: missingParts,
                    shift: raport.shift}

            if (operationId !== 'Dowolna')
                formBody.operation = operationId
            if (prodLineId !== 'Dowolna')
                formBody.prodLine = prodLineId
            if (deviceTypeId !== 'Dowolna')
                formBody.deviceType = deviceTypeId
            if (deviceId !== 'Dowolna')
                formBody.device = deviceId
            console.log(formBody)
            
            fetch('/api/zapisz-awarie/'+form.dataset.rapid, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formBody)
            })
            .then(function(response) {
                return response.json();
            })
            .then(function(json) {
                if(json.message) {
                    alert(json.mesage)
                }
                else{
                    var snackBar = document.getElementById("snackbar");
                    snackBar.className = "show";
                    snackBar.textContent = 'Pomyślnie zapisano awarię!'
                    setTimeout(function(){ snackBar.className = snackBar.className.replace("show", ""); }, 3000);                
                    form.dataset.failureid = json._id
                }
            })
            .catch((err) => {
                alert(err.message)
            })
        }
    
    if errors
        ul
            for error in errors
                li!= error.msg
