extends layout
block content
   div(class='col mx-md-5')
      div(class='row')
         div(class="col my-5")
            h1.text-center.mb-3 Wyszukiwanie Awarii
      div(class='row')
         div(class="col my-2")
            table.table.table-bordered
               thead.table-dark
                  tr
                     th.text-center(colspan='3') Czas wystąpienia awarii
               tbody
                  tr
                     td(width='40%')
                        label(for='dateStart') Od
                        input.form-control#dateStart(type='date' name='dateStart')
                     td(colspan='2')
                        label(for='shiftnum') Numer zmiany
                        select.form-control#shiftnum
                           option(value='defaultvalue' selected='selected') Dowolna
                           option(value='1') Poranna
                           option(value='2') Popołudniowa
                           option(value='3') Nocna

                  tr
                     td 
                        label(for='dateEnd') Do
                        input.form-control#dateEnd(type='date' name='dateEnd')
                     td
                        label(for='timespanGt') Dłuższa niż
                           input.form-control#timespanGt(type='time' name='timespanGt')
                     td
                        label(for='timespanLt') Krótsza niż
                           input.form-control#timespanLt(type='time' name='timespanLt')


      div(class='row')   
         div.col.my-2            
            table.table.table-bordered
               thead.table-dark
                  tr
                     th.text-center Autor
               tbody(id='author')
                  tr
                     td
                        select#user.form-control(type='select' name='user' )
                           option(value='defaultvalue' selected=true) Dowolne
                           for user in users
                              if plan
                                 option(value=user._id selected=(user._id.toString()===plan.user._id.toString() ? 'selected' : false )) #{user.fullname}
                              else
                                 option(value=user._id) #{user.fullname}            

      //- div(class='row')   
      //-    div.col.my-2            
      //-       table.table.table-bordered
      //-          thead.table-dark
      //-             tr
      //-                th.text-center Współautorzy 
      //-          tbody(id='usersCollab')
      //-             tr
      //-                td
      //-                   button(class="btn btn-danger" type='button' id="addCollaboratorsButton" onclick='addCollaborators()') Dodaj
      div(class='row')
         div.col.my-2
            table.table.table-bordered
               thead.table-dark
                  tr
                     th.text-center(colspan='4') Urządzenie
               tbody
                  td 
                     label Linia
                     select.form-control#line
                        option(value='defaultvalue' selected=true) Dowolna Linia
                        each item in lines
                           option( value=item._id) #{item.name}
                  td 
                     label Operacja
                     select.form-control#operation
                        option(value='defaultvalue' selected=true) Dowolna Operacja
                        each item in operations
                           option( value=item._id) #{item.name}
               tr
                  td
                     label Typ urządzenia
                     select.form-control#devicetype
                        option(value='defaultvalue' selected=true) Dowolny Typ
                        each item in devicetypes
                           option( value=item._id)  #{item.name}
                  td
                     label Urządzenie
                     select.form-control#device
                        //- option(value='defaultvalue' selected=true) Dowolne Urządzenie
                        //- each item in devices
                        //-    option( value=item._id ) #{item.name}
      div(class='row')
         div(class="col my-2")
            table.table.table-bordered
               thead.table-dark
                  tr
                     th.text-center(colspan='2') Efekt Awarii
               tbody
                  tr
                     td
                        label(for='status') 
                        select.form-control#status
                           option(value='defaultvalue' selected='selected') Dowolny
                           option(value='1') Naprawiono
                           option(value='2') Nie naprawiono
                           option(value='3') Rozwiązanie tymczasowe

      div(class='row')
         div.col.my-2
            button(class="btn btn-primary mb-2" type='button' id="postSearchButton" onclick='postSearchButton()') Wyszukaj    
      div(class='row' id='searchResults')
         div.col.my-2



   script.
      const allDevices =  !{JSON.stringify(devices)}
      //console.log(allDevices)
      renderDevices(allDevices)

      let linePicked = 'defaultvalue'
      let operationPicked = 'defaultvalue'
      let devicetypePicked = 'defaultvalue'

      document.getElementById("line").onchange = function(e) {
         linePicked = this.value
         updateDevices()
      }
      document.getElementById("operation").onchange = function(e) {
         operationPicked = this.value
         updateDevices()
      }
      document.getElementById("devicetype").onchange = function(e) {
         devicetypePicked = this.value
         updateDevices()
      }

         /*
         (device.prodLine.toString() === (linePicked==='defaultvalue'? device.prodLine.toString() : linePicked) &&
               device.operation.toString() === (operationPicked==='defaultvalue'? device.operation.toString() : operationPicked) &&
               device.deviceType.toString() === (devicetypePicked==='defaultvalue'? device.deviceType.toString() : devicetypePicked))
               */

      function updateDevices(){
         let devices = []
         for (device of allDevices){
            if((linePicked==='defaultvalue' ? true : device.prodLine.toString() === linePicked) &&
               (operationPicked==='defaultvalue' ? true : device.operation.toString() === operationPicked) &&
               (devicetypePicked==='defaultvalue' ? true : device.deviceType.toString() === devicetypePicked)){
               devices.push(device)
            }
         }
         removeOptions(document.getElementById('device'))
         renderDevices(devices)
      }

      function renderDevices(devices){
         let devicesHTML = `<option value='defaultvalue' selected=true> Dowolne Urządzenie </option>`
         for(device of devices) {
            devicesHTML = devicesHTML + '<option value='+ device._id +'>' + device.name + '</option>';
         }
         let whereToPaste = document.querySelector('#device')
         whereToPaste.insertAdjacentHTML('beforeend', devicesHTML)
      }
      function removeOptions(selectElement) {
         var i, L = selectElement.options.length - 1;
         for(i = L; i >= 0; i--) {
            selectElement.remove(i);
         }
      }


   script.
      //- let usersList = !{JSON.stringify(users)}
      //- let users = ''
      //- for(let i=0; i<usersList.length; i++) {
      //-    users = users + '<option value='+ usersList[i]._id +'>' + usersList[i].name + ' ' + usersList[i].surname + '</option>';
      //- }
      //- function addCollaborators(){
      //-    pasteHTML = (`
      //-       <tr>
      //-          <td>
      //-             <select class='form-control userCollaborator'>
      //-                <option value='defaultvalue'> Nie wybrano </option>
      //-                `+users+`
      //-             </select>
      //-          </td>
      //-       </tr>
      //-          `)
      //-    whereToPaste = document.querySelector('#usersCollab')
      //-    whereToPaste.insertAdjacentHTML('afterbegin', pasteHTML)
      //- }


      //- function timeToDate(date, time){
      //-    time = time.split(':')
      //-    let today = new Date(date)
      //-    today.setHours(time[0],time[1],0,0)
      //-    return today
      //- }

      //- function handleHours(time){
      //-    // TIME -2hr due to time shifts
      //-    let hr = Number(time.split(':')[0]) -2
      //-       if (hr < 0){
      //-          hr = 24 + hr
      //-       }
      //-    return hr
      //- }
      function calculateTimespan(time){
         time = time.split(':')
         let hours = Number(time[0])
         let minutes = Number(time[1])
         return hours*3600000 + minutes*60000
      }

      function postSearchButton(){
         let dateStart = document.getElementById('dateStart').value
         let dateEnd = document.getElementById('dateEnd').value
         //let hourStart = document.getElementById('hourStart').value
         //let hourEnd = document.getElementById('hourEnd').value
         let shiftnum = document.getElementById('shiftnum').value
         let timespanLt = document.getElementById('timespanLt').value
         let timespanGt = document.getElementById('timespanGt').value

         let line = document.getElementById('line').value
         let operation = document.getElementById('operation').value
         let devicetype = document.getElementById('devicetype').value
         let device = document.getElementById('device').value

         let status = document.getElementById('status').value

         let author = document.getElementById('user').value
         //- let collaborators = document.querySelectorAll('.userCollaborator')
         //- let collabs_list = []
         //- for(usr of collaborators){
         //-    if(usr.value !== 'defaultvalue')
         //-       collabs_list.push(usr.value)
         //- }
        
         let searchForm = {}
         if (shiftnum !== 'defaultvalue'){
            searchForm['shift'] = Number(shiftnum)
         }
         if (dateStart != ''){
            let dS = new Date(dateStart)
            dS.setHours(-2, 0, 0, 0)
            searchForm['dateStart'] = dS
         } 
         //- if (hourStart != ''){
         //-    searchForm['hourStart'] = handleHours(hourStart)
         //- }
         if (dateEnd != ''){
            let dE = new Date(dateEnd)
            dE.setHours(22, 0, 0, 0)
            searchForm['dateEnd'] = dE
         }
         //- if (hourEnd != ''){
         //-    searchForm['hourEnd'] =  handleHours(hourEnd)
         //- }
         
         if (timespanLt != ''){
            searchForm['timespanLt'] = calculateTimespan(timespanLt)
         }
         if (timespanGt != ''){
            searchForm['timespanGt'] = calculateTimespan(timespanGt)
         }
         if (author !== 'defaultvalue'){
            searchForm['author'] = author
         }
         //- if (collabs_list.length !== 0){
         //-    searchForm['collaborators'] = collabs_list
         //- }
         if (line != 'defaultvalue'){
            searchForm['line'] = line
         }
         if (operation != 'defaultvalue'){
            searchForm['operation'] = operation
         }
         if (devicetype != 'defaultvalue'){
            searchForm['devicetype'] = devicetype
         }
         if (device != 'defaultvalue'){
            searchForm['device'] = device
         }
         if (status != 'defaultvalue'){
            searchForm['status'] = status
         }

         console.log('FORM', searchForm)
         // send data to the server
         postSearchRaport(searchForm)
      }

      function postSearchRaport(searchForm){
         // clear previous results
         try{
         const e = document.querySelector("#searchResults");
         e.parentElement.removeChild(e);
         } catch (error){
            console.log(error)
         }

         let status
         fetch('', {
         method: 'POST',
            headers: {
               'Accept': 'application/json',
               'Content-Type': 'application/json'
            },
            body: JSON.stringify(searchForm)
      })
      .then(function(res) {
         status = res.status
         return res.json()
      })
      .then(function(data) {
         if (status===200){
            console.log('Success', status)
            handleResData(data)
         }
         else{
            console.log('Błąd Serwera', status)
            console.log(data)
         }
      })
      .catch((err) => {
         console.log(err)
      })
      }

      function handleResData(data){
         console.log(data)
         data.sort(function(a, b) {let dateA = a.startDate; let dateB = b.startDate; return (dateA < dateB) ? -1 : (dateA > dateB) ? 1 : 0;});
          let container = ''
         for (failure of data){
            let url = '/api/failure/'+failure._id
            container = container +`
            <tr> 
               <td class='padding0'> 
                  <a class='black-link' href=`+url+'>'+new Date(failure.startDate).toLocaleString() +`</a> 
               </td> 
               <td class='padding0'> 
                  <a class='black-link' href=`+url+'>'+new Date(failure.endDate).toLocaleString()+`</a> 
               </td>
            </tr>`
         }
         let raport_count = data.length
         let deklinacja_awarii
         if (raport_count===0 || raport_count>=5)
            deklinacja_awarii = 'Awarii'
         else if (raport_count===1)
            deklinacja_awarii = 'Awarię'
         else
            deklinacja_awarii = 'Awarie'
         pasteHTML = (`
         <div class='row' id='searchResults'>
            <div class='col my-2'>
               <h2> Znaleziono `+raport_count +' '+deklinacja_awarii+`.</h2>
                  <table class='table table-bordered table-hover dark-header-hover'>
                     <thead class='table-dark'>
                        <tr>
                           <th> Data Rozpoczęcia</th>
                           <th> Data Zakończenia </th>
                        </tr>
                     </thead>
                     <tbody>
                     `+container+` 
                     </tbody>
                  </table>
            </div>
         </div>
            `)
      whereToPaste = document.querySelector('#postSearchButton')
      whereToPaste.insertAdjacentHTML('afterend', pasteHTML)

      }


